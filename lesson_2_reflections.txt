1.What happens when you initialize a repository? Why do you need to do it?

Ans: An Empty Repository without any commits are initialized or created in the corresponding directory.To create a .git(hidden file) which will hold our commit 
history.

2.How is the staging area different from the working directory and the repository? What value do you think it offers?
Ans: Staging area is an intermediate between working directory and repository which contain the changes to be commited together in a place and it gives 
flexibility to the work.

3.How can you use the staging area to make sure you have one commit per logical change?

Ans: By comparing it with working directory and repository. we can do this by using commands git diff and git diff --staged respectively. 

4.What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Ans: when we want to experiment with the code but not yet decided to add those features to master commit.It helps to reduce overheads.

5.How do the diagrams help you visualize the branch structure?

Ans: The digrams splits when a branch occurs and help visualize properly and avoids making mistakes.

6.What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Ans: one branch is merged into the other(current checkedout branch).All the changes made in both branches come together and exist as one.Because even not we can 
access those commits made by both the branch through a single label.

7.What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Ans: Automatic merging saves lot of time for us from doing a lot of comparisions, which doing maually is tough.But a point comes where certain merges can only be 
done manually to resolve the merging conflicts related to logical changes made by both branches are not same. 